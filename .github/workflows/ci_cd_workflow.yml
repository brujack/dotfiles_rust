name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: setup_env-linux-x86-64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_name: setup_env-linux-arm
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: setup_env-macos-x86-64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: setup_env-macos-arm

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies for ARM builds (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu libc6-dev-arm64-cross

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build project
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Move Binary to Root Directory
        run: mv target/${{ matrix.target }}/release/setup_env ${{ matrix.binary_name }}

      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: ${{ matrix.binary_name }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Debug List Files in Artifacts Directory
        run: |
          echo "Listing all files in the artifacts directory:"
          ls -R ./artifacts

      - name: Set up Git Identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Save New Tag to Environment
        id: tag_version
        run: |
          echo "tag=$(date +%Y%m%d%H%M%S)-v1" >> $GITHUB_ENV

      - name: Create Git Tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.tag }}',
              sha: context.sha
            })

      - name: Verify Artifact Files Exist
        run: |
          echo "Verifying that all artifact files exist"
          ls ./artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            ./artifacts/setup_env-linux-x86-64
            ./artifacts/setup_env-linux-arm
            ./artifacts/setup_env-macos-x86-64
            ./artifacts/setup_env-macos-arm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
