name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        profile: minimal

    - name: Build project
      run: |
        cargo build --release

    - name: Run tests
      run: |
        cargo test

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v3
      with:
        name: setup_env
        path: target/release/setup_env

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        profile: minimal

    - name: Build project
      run: |
        cargo build --release

    - name: Save New Tag to Environment
      id: tag-info
      run: |
        DATE=$(date +"%Y%m%d")
        EXISTING_TAGS=$(git tag | grep "^${DATE}")

        if [ -z "$EXISTING_TAGS" ]; then
            NEW_TAG="${DATE}-1"
        else
            MAX_INCREMENT=$(echo "$EXISTING_TAGS" | awk -F '-' '{print $2}' | sort -nr | head -n1)
            NEW_INCREMENT=$((MAX_INCREMENT + 1))
            NEW_TAG="${DATE}-${NEW_INCREMENT}"
        fi

        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
        echo "Created tag: $NEW_TAG"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: target/release/setup_env
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag-release:
    runs-on: ubuntu-latest
    needs: release

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Generate and Push Tags
      run: |
        NEW_TAG=${{ env.NEW_TAG }}

        # Create the new tag
        git tag -a "$NEW_TAG" -m "Release for $NEW_TAG"

        # Update the 'latest' tag to point to the new release
        git tag -f latest

        # Push tags to the remote repository
        git push origin "$NEW_TAG"
        git push origin -f latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
